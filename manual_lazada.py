import bs4
from json_repair import json_repair
import json, os
from urllib.parse import quote


ll = [
    'vivo iQOO 9 (China)',
    'vivo iQOO 9 Pro',
    'vivo iQOO 9 SE',
    'vivo iQOO 9T',
    'vivo iQOO Neo',
    'vivo iQOO Neo3 5G',
    'vivo iQOO Neo5',
    'vivo iQOO Neo5 Lite',
    'vivo iQOO Neo5 S',
    'vivo iQOO Neo5 SE',
    'vivo iQOO Neo6 (China)',
    'vivo iQOO Neo6 SE',
    'vivo iQOO Neo7 (China)',
    'vivo iQOO Neo7 Racing',
    'vivo iQOO Neo7 SE',
    'vivo iQOO Neo8',
    'vivo iQOO Neo8 Pro',
    'vivo iQOO Neo9',
    'vivo iQOO Neo9 Pro',
    'vivo iQOO Neo9 Pro (China)',
    'vivo iQOO Neo 6',
    'vivo iQOO Neo 7',
    'vivo iQOO Neo 7 Pro',
    'vivo iQOO Neo 855',
    'vivo iQOO Neo 855 Racing',
    'vivo iQOO Pro',
    'vivo iQOO Pro 5G',
    'vivo iQOO U1',
    'vivo iQOO U1x',
    'vivo iQOO U3',
    'vivo iQOO U3x',
    'vivo iQOO U3x Standard',
    'vivo iQOO U5',
    'vivo iQOO U5e',
    'vivo iQOO U5x',
    'vivo iQOO Z1',
    'vivo iQOO Z1x',
    'vivo iQOO Z3',
    'vivo iQOO Z5',
    'vivo iQOO Z5x',
    'vivo iQOO Z6',
    'vivo iQOO Z6 (China)',
    'vivo iQOO Z6 44W',
    'vivo iQOO Z6 Lite',
    'vivo iQOO Z6 Pro',
    'vivo iQOO Z6x',
    'vivo iQOO Z7',
    'vivo iQOO Z7 (China)',
    'vivo iQOO Z7 Pro',
    'vivo iQOO Z7i',
    'vivo iQOO Z7s',
    'vivo iQOO Z7x',
    'vivo iQOO Z8 (China)',
    'vivo iQOO Z8x',
    'vivo NEX 3',
    'vivo NEX 3 5G',
    'vivo NEX 3S 5G',
    'vivo S1',
    'vivo S10',
    'vivo S10 Pro',
    'vivo S10e',
    'vivo S12',
    'vivo S12 Pro',
    'vivo S15',
    'vivo S15 Pro',
    'vivo S15e',
    'vivo S16',
    'vivo S16 Pro',
    'vivo S16e',
    'vivo S17',
    'vivo S17 Pro',
    'vivo S17e',
    'vivo S17t',
    'vivo S18',
    'vivo S18 Pro',
    'vivo S18e',
    'vivo S1 (China)',
    'vivo S1 Prime',
    'vivo S1 Pro',
    'vivo S1 Pro (China)',
    'vivo S5',
    'vivo S6 5G',
    'vivo S7',
    'vivo S7e',
    'vivo S7t',
    'vivo S9',
    'vivo S9e',
    'vivo T1',
    'vivo T1 (Snapdragon 680)',
    'vivo T1 (Snapdragon 778G)',
    'vivo T1 5G',
    'vivo T1 Pro',
    'vivo T1x',
    'vivo T1x (India)',
    'vivo T1x 4G',
    'vivo T2',
    'vivo T2 (China)',
    'vivo T2 (India)',
    'vivo T2 Pro',
    'vivo T2x',
    'vivo T2x (India)',
    'vivo U10',
    'vivo U20',
    'vivo U3',
    'vivo V15',
    'vivo V15 Pro',
    'vivo V17',
    'vivo V17 (Russia)',
    'vivo V17 Neo',
    'vivo V17 Pro',
    'vivo V19',
    'vivo V19 (Indonesia)',
    'vivo V19 Neo',
    'vivo V20',
    'vivo V20 2021',
    'vivo V20 Pro',
    'vivo V20 SE',
    'vivo V21',
    'vivo V21 5G',
    'vivo V21e',
    'vivo V21e 5G',
    'vivo V21s',
    'vivo V23 5G',
    'vivo V23 Pro',
    'vivo V23e',
    'vivo V23e 5G',
    'vivo V25',
    'vivo V25 Pro',
    'vivo V25e',
    'vivo V27',
    'vivo V27 Pro',
    'vivo V27e',
    'vivo V29',
    'vivo V29 Lite',
    'vivo V29 Pro',
    'vivo V29e',
    'vivo V29e (India)',
    'vivo V30 Lite',
    'vivo X100',
    'vivo X100 Pro',
    'vivo X27',
    'vivo X27 Pro',
    'vivo X30',
    'vivo X30 Pro',
    'vivo X50',
    'vivo X50 5G',
    'vivo X50 Lite',
    'vivo X50 Pro+',
    'vivo X50 Pro',
    'vivo X50e',
    'vivo X51 5G',
    'vivo X60',
    'vivo X60 (China)',
    'vivo X60 Pro+',
    'vivo X60 Pro',
    'vivo X60 Pro (China)',
    'vivo X60s',
    'vivo X60t',
    'vivo X60t Pro+',
    'vivo X70',
    'vivo X70 Pro+',
    'vivo X70 Pro',
    'vivo X80',
    'vivo X80 Lite',
    'vivo X80 Pro+',
    'vivo X80 Pro',
    'vivo X90',
    'vivo X90 Pro+',
    'vivo X90 Pro',
    'vivo X90s',
    'vivo X Flip',
    'vivo X Fold+',
    'vivo X Fold',
    'vivo X Fold2',
    'vivo X Note',
    'vivo Y01',
    'vivo Y02',
    'vivo Y02A',
    'vivo Y02s',
    'vivo Y02t',
    'vivo Y100',
    'vivo Y100 (China)',
    'vivo Y100 (IDN)',
    'vivo Y100i',
    'vivo Y11 (2019)',
    'vivo Y11 (2023)',
    'vivo Y11s',
    'vivo Y12',
    'vivo Y12a',
    'vivo Y12i',
    'vivo Y12s',
    'vivo Y12s 2021',
    'vivo Y15',
    'vivo Y15a',
    'vivo Y15s',
    'vivo Y16',
    'vivo Y17',
    'vivo Y17s',
    'vivo Y19',
    'vivo Y1s',
    'vivo Y20',
    'vivo Y200',
    'vivo Y20 2021',
    'vivo Y20a',
    'vivo Y20g',
    'vivo Y20i',
    'vivo Y20s',
    'vivo Y20s [G]',
    'vivo Y20t',
    'vivo Y21',
    'vivo Y21a',
    'vivo Y21e',
    'vivo Y21G',
    'vivo Y21s',
    'vivo Y21t',
    'vivo Y21t (India)',
    'vivo Y22',
    'vivo Y22s',
    'vivo Y27',
    'vivo Y27 5G',
    'vivo Y27s',
    'vivo Y3',
    'vivo Y30',
    'vivo Y30 (China)',
    'vivo Y30 5G',
    'vivo Y30 Standard',
    'vivo Y30g',
    'vivo Y31',
    'vivo Y31s',
    'vivo Y32',
    'vivo Y33',
    'vivo Y33e',
    'vivo Y33s',
    'vivo Y33s 5G',
    'vivo Y33t',
    'vivo Y35+',
    'vivo Y35',
    'vivo Y35 5G',
    'vivo Y36',
    'vivo Y36 (India)',
    'vivo Y36 5G',
    'vivo Y36i',
    'vivo Y3 (4GB+64GB)',
    'vivo Y3 Standard',
    'vivo Y3s',
    'vivo Y3s (2021)',
    'vivo Y50',
    'vivo Y50t',
    'vivo Y51 (2020, December)',
    'vivo Y51 (2020, September)',
    'vivo Y51a',
    'vivo Y51s',
    'vivo Y52 5G',
    'vivo Y52s',
    'vivo Y52s t1',
    'vivo Y52t',
    'vivo Y53s',
    'vivo Y53s 4G',
    'vivo Y54s',
    'vivo Y55',
    'vivo Y55 5G',
    'vivo Y55s (2021)',
    'vivo Y55s (2023)',
    'vivo Y56',
    'vivo Y5s',
    'vivo Y70',
    'vivo Y70s',
    'vivo Y70t',
    'vivo Y71t',
    'vivo Y72 5G',
    'vivo Y72 5G (India)',
    'vivo Y72t',
    'vivo Y73',
    'vivo Y73s',
    'vivo Y73t',
    'vivo Y74s',
    'vivo Y75',
    'vivo Y75 5G',
    'vivo Y75s',
    'vivo Y76 5G',
    'vivo Y76s',
    'vivo Y77',
    'vivo Y77 (China)',
    'vivo Y77e',
    'vivo Y77e (t1)',
    'vivo Y77t',
    'vivo Y78+',
    'vivo Y78',
    'vivo Y78 (China)',
    'vivo Y78t',
    'vivo Y89',
    'vivo Y90',
    'vivo Y91 (Mediatek)',
    'vivo Y91i (India)',
    'vivo Y9s',
    'vivo Z1Pro',
    'vivo Z1x',
    'vivo Z3x',
    'vivo Z5',
    'vivo Z5i',
    'vivo Z5x',
    'vivo Z5x (2020)',
    'vivo Z6 5G',
]

# cur_phone = input('Phone Name: ')
# get only devices from the sitemap which is 2017-12-30T22:10:18+01:00 and newer using the lastmod tag
for cur_phone in ll:
    print("Processing Lazada entries...")

    lazada = f"https://www.lazada.com.ph/shop-mobiles/?ajax=true&q={quote(cur_phone)}&service=official"
    print(f"URL: {lazada}")

    # some of the pages has broken json, so we need to repair it
    json_laz = json_repair.loads(input("Lazada Json: "))

    data_out = None

    # check if file present
    if not os.path.isfile('lazada_out.json'):
        with open('lazada_out.json', 'w') as file:
            json.dump({}, file)

    with open('lazada_out.json', 'r') as file:
        data_out = json_repair.loads(file.read())

    if len(json_laz['mods']['listItems']):
        item = json_laz['mods']['listItems'][0]
        if all([word.lower() in json_laz['mods']['listItems'][0]['name'].lower() for word in cur_phone.split()]):
            if item.get('price') is None:
                item['price'] = 'Unknown'
            if item.get('originalPrice') is None:
                item['originalPrice'] = item['price']
            if item.get('review') is None:
                item['review'] = 'Unknown'
            if item.get('ratingScore') is None:
                item['ratingScore'] = 'Unknown'
            if item.get('itemUrl') is None:
                item['itemUrl'] = 'Unknown'


            if data_out is None:
                data_out =  {
                    cur_phone : {
                        'URL': item['itemUrl'], 
                        'Ratings': item['ratingScore'],
                        'Reviews': item['review'],
                        'Price': item['price'], 
                        'Original Price': item['originalPrice']
                        }
                    }
                
            else:
                data_out[cur_phone] = {
                    'URL': item['itemUrl'], 
                    'Ratings': item['ratingScore'],
                    'Reviews': item['review'],
                    'Price': item['price'], 
                    'Original Price': item['originalPrice']
                    }

            print(f'[INFO]: Phone {cur_phone} in Lazada.')
        else:
            data_out[cur_phone] = {}
            print(f'[INFO]: Phone {cur_phone} not in Lazada.')

    else:
        data_out[cur_phone] = {}
        print(f'[INFO]: Phone {cur_phone} not in Lazada.')


    with open('lazada_out.json', 'w') as file:
        json.dump(data_out, file, indent=1)